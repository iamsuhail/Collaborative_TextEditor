{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/Muhammad suhail/Desktop/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Muhammad suhail/Desktop/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _readOnlyError from\"C:/Users/Muhammad suhail/Desktop/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/readOnlyError.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Muhammad suhail\\\\Desktop\\\\realtime-code-editor-main\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import Avatar from'react-avatar';import React,{useEffect,useRef,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Video=function Video(_ref){var socket=_ref.socket,roomId=_ref.roomId,username=_ref.username,isLocalUser=_ref.isLocalUser;var localVideoRef=useRef();var remoteVideoRef=useRef();var audioPeerConnection=new RTCPeerConnection();var videoPeerConnection=new RTCPeerConnection();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),videoEnabled=_useState2[0],setVideoEnabled=_useState2[1];var _useState3=useState(new RTCPeerConnection()),_useState4=_slicedToArray(_useState3,2),peerConnection=_useState4[0],setPeerConnection=_useState4[1];useEffect(function(){var initializeMedia=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var stream;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return navigator.mediaDevices.getUserMedia({video:true,audio:true});case 3:stream=_context.sent;localVideoRef.current.srcObject=stream;// Add the audio track to the audio RTCPeerConnection\nstream.getAudioTracks().forEach(function(track){audioPeerConnection.addTrack(track,stream);});// Add the video track to the video RTCPeerConnection\nstream.getVideoTracks().forEach(function(track){videoPeerConnection.addTrack(track,stream);});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.error('Error accessing media devices:',_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function initializeMedia(){return _ref2.apply(this,arguments);};}();initializeMedia();audioPeerConnection.onicecandidate=function(event){if(event.candidate){socket.emit('ice-candidate',{roomId:roomId,candidate:event.candidate});}};videoPeerConnection.onicecandidate=function(event){if(event.candidate){socket.emit('ice-candidate',{roomId:roomId,candidate:event.candidate});}};socket.on('offer',function(data){var peerConnection=data.offer.type==='audio'?audioPeerConnection:videoPeerConnection;peerConnection.setRemoteDescription(new RTCSessionDescription(data.offer));peerConnection.createAnswer().then(function(answer){peerConnection.setLocalDescription(answer);socket.emit('answer',{roomId:roomId,answer:answer});}).catch(function(error){return console.error('Error creating answer:',error);});});socket.on('answer',function(data){var peerConnection=data.answer.type==='audio'?audioPeerConnection:videoPeerConnection;peerConnection.setRemoteDescription(new RTCSessionDescription(data.answer));});audioPeerConnection.createOffer().then(function(offer){audioPeerConnection.setLocalDescription(offer);socket.emit('offer',{roomId:roomId,offer:offer,type:'audio'});}).catch(function(error){return console.error('Error creating audio offer:',error);});videoPeerConnection.createOffer().then(function(offer){videoPeerConnection.setLocalDescription(offer);socket.emit('offer',{roomId:roomId,offer:offer,type:'video'});}).catch(function(error){return console.error('Error creating video offer:',error);});},[]);var toggleVideo=function toggleVideo(){setVideoEnabled(function(prev){return!prev;});// Close the existing RTCPeerConnection\npeerConnection.close();// Create a new RTCPeerConnection\nvar newPeerConnection=new RTCPeerConnection();newPeerConnection.addStream(localVideoRef.current.srcObject);// Update the peerConnection reference\nnewPeerConnection,_readOnlyError(\"peerConnection\");// Get the new video track\nvar videoTrack=localVideoRef.current.srcObject.getVideoTracks()[0];// Enable or disable the video track based on the new state\nvideoTrack.enabled=!videoTrack.enabled;};return/*#__PURE__*/_jsxs(\"div\",{className:\"videoContainer\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"userName\",children:username}),/*#__PURE__*/_jsxs(\"div\",{className:\"videoFeature\",children:[videoEnabled?/*#__PURE__*/_jsx(\"video\",{className:\"videoFeature\",ref:localVideoRef,autoPlay:true,playsInline:true,muted:true}):/*#__PURE__*/_jsx(Avatar,{className:\"videoFeature\",name:username,size:150,round:\"1px\"}),isLocalUser&&/*#__PURE__*/_jsx(\"button\",{onClick:toggleVideo,style:{backgroundColor:!videoEnabled?'#4aed88':'#E4312b'},children:videoEnabled?'Disable Video':'Enable Video'})]}),remoteVideoRef.current&&/*#__PURE__*/_jsx(\"video\",{className:\"videoFeature\",ref:remoteVideoRef,autoPlay:true,playsInline:true})]});};export default Video;","map":{"version":3,"sources":["C:/Users/Muhammad suhail/Desktop/realtime-code-editor-main/src/components/Video.js"],"names":["Avatar","React","useEffect","useRef","useState","Video","socket","roomId","username","isLocalUser","localVideoRef","remoteVideoRef","audioPeerConnection","RTCPeerConnection","videoPeerConnection","videoEnabled","setVideoEnabled","peerConnection","setPeerConnection","initializeMedia","navigator","mediaDevices","getUserMedia","video","audio","stream","current","srcObject","getAudioTracks","forEach","track","addTrack","getVideoTracks","console","error","onicecandidate","event","candidate","emit","on","data","offer","type","setRemoteDescription","RTCSessionDescription","createAnswer","then","answer","setLocalDescription","catch","createOffer","toggleVideo","prev","close","newPeerConnection","addStream","videoTrack","enabled","backgroundColor"],"mappings":"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","sourcesContent":["import Avatar from 'react-avatar';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst Video = ({ socket, roomId, username, isLocalUser }) => {\r\n    const localVideoRef = useRef();\r\n    const remoteVideoRef = useRef();\r\n    const audioPeerConnection = new RTCPeerConnection();\r\n    const videoPeerConnection = new RTCPeerConnection();\r\n    const [videoEnabled, setVideoEnabled] = useState(true);\r\n    const [peerConnection, setPeerConnection] = useState(new RTCPeerConnection());\r\n\r\n    useEffect(() => {\r\n        const initializeMedia = async () => {\r\n            try {\r\n                const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n                localVideoRef.current.srcObject = stream;\r\n\r\n                // Add the audio track to the audio RTCPeerConnection\r\n                stream.getAudioTracks().forEach((track) => {\r\n                    audioPeerConnection.addTrack(track, stream);\r\n                });\r\n\r\n                // Add the video track to the video RTCPeerConnection\r\n                stream.getVideoTracks().forEach((track) => {\r\n                    videoPeerConnection.addTrack(track, stream);\r\n                });\r\n            } catch (error) {\r\n                console.error('Error accessing media devices:', error);\r\n            }\r\n        };\r\n\r\n        initializeMedia();\r\n\r\n        audioPeerConnection.onicecandidate = (event) => {\r\n            if (event.candidate) {\r\n                socket.emit('ice-candidate', { roomId, candidate: event.candidate });\r\n            }\r\n        };\r\n\r\n        videoPeerConnection.onicecandidate = (event) => {\r\n            if (event.candidate) {\r\n                socket.emit('ice-candidate', { roomId, candidate: event.candidate });\r\n            }\r\n        };\r\n\r\n        socket.on('offer', (data) => {\r\n            const peerConnection = data.offer.type === 'audio' ? audioPeerConnection : videoPeerConnection;\r\n            peerConnection.setRemoteDescription(new RTCSessionDescription(data.offer));\r\n            peerConnection.createAnswer()\r\n                .then((answer) => {\r\n                    peerConnection.setLocalDescription(answer);\r\n                    socket.emit('answer', { roomId, answer });\r\n                })\r\n                .catch((error) => console.error('Error creating answer:', error));\r\n        });\r\n\r\n        socket.on('answer', (data) => {\r\n            const peerConnection = data.answer.type === 'audio' ? audioPeerConnection : videoPeerConnection;\r\n            peerConnection.setRemoteDescription(new RTCSessionDescription(data.answer));\r\n        });\r\n\r\n        audioPeerConnection.createOffer()\r\n            .then((offer) => {\r\n                audioPeerConnection.setLocalDescription(offer);\r\n                socket.emit('offer', { roomId, offer, type: 'audio' });\r\n            })\r\n            .catch((error) => console.error('Error creating audio offer:', error));\r\n\r\n        videoPeerConnection.createOffer()\r\n            .then((offer) => {\r\n                videoPeerConnection.setLocalDescription(offer);\r\n                socket.emit('offer', { roomId, offer, type: 'video' });\r\n            })\r\n            .catch((error) => console.error('Error creating video offer:', error));\r\n\r\n    }, []);\r\n\r\n    const toggleVideo = () => {\r\n        setVideoEnabled((prev) => !prev);\r\n    \r\n        // Close the existing RTCPeerConnection\r\n        peerConnection.close();\r\n    \r\n        // Create a new RTCPeerConnection\r\n        const newPeerConnection = new RTCPeerConnection();\r\n        newPeerConnection.addStream(localVideoRef.current.srcObject);\r\n    \r\n        // Update the peerConnection reference\r\n        peerConnection = newPeerConnection;\r\n    \r\n        // Get the new video track\r\n        const videoTrack = localVideoRef.current.srcObject.getVideoTracks()[0];\r\n    \r\n        // Enable or disable the video track based on the new state\r\n        videoTrack.enabled = !videoTrack.enabled;\r\n    };\r\n    \r\n    \r\n\r\n    return (\r\n        <div className='videoContainer'>\r\n            <span className=\"userName\">{username}</span>\r\n            <div className='videoFeature'>\r\n                {videoEnabled ? (\r\n                    <video className='videoFeature' ref={localVideoRef} autoPlay playsInline muted />\r\n                ) : (\r\n                    <Avatar className='videoFeature' name={username} size={150} round=\"1px\" />\r\n                )}\r\n                {isLocalUser && (\r\n                    <button onClick={toggleVideo} style={{ backgroundColor: !videoEnabled ? '#4aed88' : '#E4312b' }}>\r\n                        {videoEnabled ? 'Disable Video' : 'Enable Video'}\r\n                    </button>\r\n                )}\r\n            </div>\r\n            {remoteVideoRef.current && <video className='videoFeature' ref={remoteVideoRef} autoPlay playsInline />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Video;\r\n"]},"metadata":{},"sourceType":"module"}