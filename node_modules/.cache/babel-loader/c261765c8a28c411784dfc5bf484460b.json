{"ast":null,"code":"import _slicedToArray from\"C:/Users/Muhammad suhail/Desktop/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// Video.js\nimport React,{useEffect,useRef,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Video=function Video(_ref){var socket=_ref.socket,roomId=_ref.roomId,username=_ref.username;var localVideoRef=useRef();var remoteVideoRef=useRef();var peerConnection=new RTCPeerConnection();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),videoEnabled=_useState2[0],setVideoEnabled=_useState2[1];useEffect(function(){// Get user media and display it locally\nnavigator.mediaDevices.getUserMedia({video:true,audio:true}).then(function(stream){localVideoRef.current.srcObject=stream;peerConnection.addStream(stream);}).catch(function(error){return console.error('Error accessing media devices:',error);});// Listen for remote stream and display it\npeerConnection.onaddstream=function(event){remoteVideoRef.current.srcObject=event.stream;};// Listen for ICE candidates and send them to the signaling server\npeerConnection.onicecandidate=function(event){if(event.candidate){socket.emit('ice-candidate',{roomId:roomId,candidate:event.candidate});}};// Listen for signaling events (offer, answer)\nsocket.on('offer',function(data){peerConnection.setRemoteDescription(new RTCSessionDescription(data.offer));peerConnection.createAnswer().then(function(answer){peerConnection.setLocalDescription(answer);socket.emit('answer',{roomId:roomId,answer:answer});}).catch(function(error){return console.error('Error creating answer:',error);});});socket.on('answer',function(data){peerConnection.setRemoteDescription(new RTCSessionDescription(data.answer));});// Create offer and emit it to the signaling server\npeerConnection.createOffer().then(function(offer){peerConnection.setLocalDescription(offer);socket.emit('offer',{roomId:roomId,offer:offer});}).catch(function(error){return console.error('Error creating offer:',error);});},[]);var toggleVideo=function toggleVideo(){setVideoEnabled(function(prev){return!prev;});var videoTrack=localVideoRef.current.srcObject.getVideoTracks()[0];videoTrack.enabled=!videoTrack.enabled;};return/*#__PURE__*/_jsxs(\"div\",{className:\"client\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"videoFeature\",children:[/*#__PURE__*/_jsx(\"video\",{className:\"videoFeature\",ref:localVideoRef,autoPlay:true,playsInline:true,muted:!videoEnabled}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleVideo,children:videoEnabled?'Disable Video':'Enable Video'})]}),/*#__PURE__*/_jsx(\"span\",{className:\"userName\",children:username})]});};export default Video;","map":{"version":3,"sources":["C:/Users/Muhammad suhail/Desktop/realtime-code-editor-main/src/components/Video.js"],"names":["React","useEffect","useRef","useState","Video","socket","roomId","username","localVideoRef","remoteVideoRef","peerConnection","RTCPeerConnection","videoEnabled","setVideoEnabled","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","addStream","catch","error","console","onaddstream","event","onicecandidate","candidate","emit","on","data","setRemoteDescription","RTCSessionDescription","offer","createAnswer","answer","setLocalDescription","createOffer","toggleVideo","prev","videoTrack","getVideoTracks","enabled"],"mappings":"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","sourcesContent":["// Video.js\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst Video = ({ socket, roomId, username }) => {\r\n    const localVideoRef = useRef();\r\n    const remoteVideoRef = useRef();\r\n    const peerConnection = new RTCPeerConnection();\r\n    const [videoEnabled, setVideoEnabled] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // Get user media and display it locally\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n            .then((stream) => {\r\n                localVideoRef.current.srcObject = stream;\r\n                peerConnection.addStream(stream);\r\n            })\r\n            .catch((error) => console.error('Error accessing media devices:', error));\r\n\r\n        // Listen for remote stream and display it\r\n        peerConnection.onaddstream = (event) => {\r\n            remoteVideoRef.current.srcObject = event.stream;\r\n        };\r\n\r\n        // Listen for ICE candidates and send them to the signaling server\r\n        peerConnection.onicecandidate = (event) => {\r\n            if (event.candidate) {\r\n                socket.emit('ice-candidate', { roomId, candidate: event.candidate });\r\n            }\r\n        };\r\n\r\n        // Listen for signaling events (offer, answer)\r\n        socket.on('offer', (data) => {\r\n            peerConnection.setRemoteDescription(new RTCSessionDescription(data.offer));\r\n            peerConnection.createAnswer()\r\n                .then((answer) => {\r\n                    peerConnection.setLocalDescription(answer);\r\n                    socket.emit('answer', { roomId, answer });\r\n                })\r\n                .catch((error) => console.error('Error creating answer:', error));\r\n        });\r\n\r\n        socket.on('answer', (data) => {\r\n            peerConnection.setRemoteDescription(new RTCSessionDescription(data.answer));\r\n        });\r\n\r\n        // Create offer and emit it to the signaling server\r\n        peerConnection.createOffer()\r\n            .then((offer) => {\r\n                peerConnection.setLocalDescription(offer);\r\n                socket.emit('offer', { roomId, offer });\r\n            })\r\n            .catch((error) => console.error('Error creating offer:', error));\r\n\r\n    }, []);\r\n\r\n    const toggleVideo = () => {\r\n        setVideoEnabled((prev) => !prev);\r\n        const videoTrack = localVideoRef.current.srcObject.getVideoTracks()[0];\r\n        videoTrack.enabled = !videoTrack.enabled;\r\n    };\r\n\r\n    return (\r\n        <div className='client' >\r\n            <div className='videoFeature'>\r\n                <video className='videoFeature' ref={localVideoRef} autoPlay playsInline muted={!videoEnabled} />\r\n                <button onClick={toggleVideo}>\r\n                    {videoEnabled ? 'Disable Video' : 'Enable Video'}\r\n                </button>\r\n            </div>\r\n            <span className=\"userName\">{username}</span>\r\n            {/* {remoteVideoRef.current && <video className='videoFeature' ref={remoteVideoRef} autoPlay playsInline />} */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Video;\r\n"]},"metadata":{},"sourceType":"module"}