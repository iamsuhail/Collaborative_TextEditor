{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/Muhammad suhail/Desktop/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Muhammad suhail/Desktop/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Muhammad suhail\\\\Desktop\\\\realtime-code-editor-main\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useRef,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Video=function Video(_ref){var socket=_ref.socket,roomId=_ref.roomId,username=_ref.username,isLocalUser=_ref.isLocalUser;var localVideoRef=useRef();var remoteVideoRef=useRef();var peerConnection=new RTCPeerConnection();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),videoEnabled=_useState2[0],setVideoEnabled=_useState2[1];useEffect(function(){var init=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var stream;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return navigator.mediaDevices.getUserMedia({video:true,audio:true});case 3:stream=_context.sent;localVideoRef.current.srcObject=stream;peerConnection.addStream(stream);// Listen for remote stream and display it\npeerConnection.onaddstream=function(event){remoteVideoRef.current.srcObject=event.stream;};// Listen for ICE candidates and send them to the signaling server\npeerConnection.onicecandidate=function(event){if(event.candidate){socket.emit('ice-candidate',{roomId:roomId,candidate:event.candidate});}};// Listen for signaling events (offer, answer)\nsocket.on('offer',function(data){peerConnection.setRemoteDescription(new RTCSessionDescription(data.offer));peerConnection.createAnswer().then(function(answer){peerConnection.setLocalDescription(answer);socket.emit('answer',{roomId:roomId,answer:answer});}).catch(function(error){return console.error('Error creating answer:',error);});});socket.on('answer',function(data){peerConnection.setRemoteDescription(new RTCSessionDescription(data.answer));});// Create offer and emit it to the signaling server\npeerConnection.createOffer().then(function(offer){peerConnection.setLocalDescription(offer);socket.emit('offer',{roomId:roomId,offer:offer});}).catch(function(error){return console.error('Error creating offer:',error);});_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](0);console.error('Error accessing media devices:',_context.t0);case 16:case\"end\":return _context.stop();}}},_callee,null,[[0,13]]);}));return function init(){return _ref2.apply(this,arguments);};}();init();},[]);var toggleVideo=function toggleVideo(){setVideoEnabled(function(prev){return!prev;});var videoTrack=localVideoRef.current.srcObject.getVideoTracks()[0];videoTrack.enabled=!videoTrack.enabled;};return/*#__PURE__*/_jsxs(\"div\",{className:\"videoContainer\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"userName\",children:username}),/*#__PURE__*/_jsxs(\"div\",{className:\"videoFeature\",children:[/*#__PURE__*/_jsx(\"video\",{className:\"videoFeature\",ref:localVideoRef,autoPlay:true,playsInline:true,muted:true}),isLocalUser&&/*#__PURE__*/_jsx(\"button\",{onClick:toggleVideo,style:{backgroundColor:!videoEnabled?'#4aed88':'#E4312b'},children:videoEnabled?'Disable Video':'Enable Video'})]}),remoteVideoRef.current&&/*#__PURE__*/_jsx(\"video\",{className:\"videoFeature\",ref:remoteVideoRef,autoPlay:true,playsInline:true})]});};export default Video;","map":{"version":3,"sources":["C:/Users/Muhammad suhail/Desktop/realtime-code-editor-main/src/components/Video.js"],"names":["React","useEffect","useRef","useState","Video","socket","roomId","username","isLocalUser","localVideoRef","remoteVideoRef","peerConnection","RTCPeerConnection","videoEnabled","setVideoEnabled","init","navigator","mediaDevices","getUserMedia","video","audio","stream","current","srcObject","addStream","onaddstream","event","onicecandidate","candidate","emit","on","data","setRemoteDescription","RTCSessionDescription","offer","createAnswer","then","answer","setLocalDescription","catch","error","console","createOffer","toggleVideo","prev","videoTrack","getVideoTracks","enabled","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst Video = ({ socket, roomId, username, isLocalUser }) => {\r\n    const localVideoRef = useRef();\r\n    const remoteVideoRef = useRef();\r\n    const peerConnection = new RTCPeerConnection();\r\n    const [videoEnabled, setVideoEnabled] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            try {\r\n                const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n\r\n                localVideoRef.current.srcObject = stream;\r\n                peerConnection.addStream(stream);\r\n\r\n                // Listen for remote stream and display it\r\n                peerConnection.onaddstream = (event) => {\r\n                    remoteVideoRef.current.srcObject = event.stream;\r\n                };\r\n\r\n                // Listen for ICE candidates and send them to the signaling server\r\n                peerConnection.onicecandidate = (event) => {\r\n                    if (event.candidate) {\r\n                        socket.emit('ice-candidate', { roomId, candidate: event.candidate });\r\n                    }\r\n                };\r\n\r\n                // Listen for signaling events (offer, answer)\r\n                socket.on('offer', (data) => {\r\n                    peerConnection.setRemoteDescription(new RTCSessionDescription(data.offer));\r\n                    peerConnection.createAnswer()\r\n                        .then((answer) => {\r\n                            peerConnection.setLocalDescription(answer);\r\n                            socket.emit('answer', { roomId, answer });\r\n                        })\r\n                        .catch((error) => console.error('Error creating answer:', error));\r\n                });\r\n\r\n                socket.on('answer', (data) => {\r\n                    peerConnection.setRemoteDescription(new RTCSessionDescription(data.answer));\r\n                });\r\n\r\n                // Create offer and emit it to the signaling server\r\n                peerConnection.createOffer()\r\n                    .then((offer) => {\r\n                        peerConnection.setLocalDescription(offer);\r\n                        socket.emit('offer', { roomId, offer });\r\n                    })\r\n                    .catch((error) => console.error('Error creating offer:', error));\r\n\r\n            } catch (error) {\r\n                console.error('Error accessing media devices:', error);\r\n            }\r\n        };\r\n\r\n        init();\r\n\r\n    }, []);\r\n\r\n    const toggleVideo = () => {\r\n        setVideoEnabled((prev) => !prev);\r\n        const videoTrack = localVideoRef.current.srcObject.getVideoTracks()[0];\r\n        videoTrack.enabled = !videoTrack.enabled;\r\n    };\r\n\r\n    return (\r\n        <div className='videoContainer'>\r\n            <span className=\"userName\">{username}</span>\r\n            <div className='videoFeature'>\r\n                <video className='videoFeature' ref={localVideoRef} autoPlay playsInline muted />\r\n                {isLocalUser && (\r\n                    <button onClick={toggleVideo} style={{ backgroundColor: !videoEnabled ? '#4aed88' : '#E4312b' }}>\r\n                        {videoEnabled ? 'Disable Video' : 'Enable Video'}\r\n                    </button>\r\n                )}\r\n            </div>\r\n            {remoteVideoRef.current && <video className='videoFeature' ref={remoteVideoRef} autoPlay playsInline />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Video;\r\n"]},"metadata":{},"sourceType":"module"}