{"ast":null,"code":"import _slicedToArray from\"C:/Users/Muhammad suhail/Desktop/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// Video.js\nimport React,{useEffect,useRef,useState}from'react';import Avatar from'react-avatar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Video=function Video(_ref){var username=_ref.username,stream=_ref.stream,socket=_ref.socket,roomId=_ref.roomId;var localVideoRef=useRef();var remoteVideoRef=useRef();var peerConnection=new RTCPeerConnection();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),videoEnabled=_useState2[0],setVideoEnabled=_useState2[1];useEffect(function(){if(stream){var videoTrack=stream.getVideoTracks()[0];if(videoTrack){videoTrack.enabled=videoEnabled;localVideoRef.current.srcObject=stream;peerConnection.addStream(stream);}}// ... (rest of the useEffect)\n},[stream,videoEnabled]);var toggleVideo=function toggleVideo(){setVideoEnabled(function(prev){return!prev;});};return/*#__PURE__*/_jsxs(\"div\",{children:[stream?/*#__PURE__*/_jsxs(\"div\",{className:\"videoContainer\",children:[/*#__PURE__*/_jsx(\"video\",{ref:localVideoRef,autoPlay:true,playsInline:true,muted:!stream.getAudioTracks().length}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleVideo,children:videoEnabled?'Disable Video':'Enable Video'})]}):/*#__PURE__*/_jsx(Avatar,{name:username,size:100,round:\"12px\"}),stream&&/*#__PURE__*/_jsx(\"video\",{ref:remoteVideoRef,autoPlay:true,playsInline:true})]});};export default Video;","map":{"version":3,"sources":["C:/Users/Muhammad suhail/Desktop/realtime-code-editor-main/src/components/Video.js"],"names":["React","useEffect","useRef","useState","Avatar","Video","username","stream","socket","roomId","localVideoRef","remoteVideoRef","peerConnection","RTCPeerConnection","videoEnabled","setVideoEnabled","videoTrack","getVideoTracks","enabled","current","srcObject","addStream","toggleVideo","prev","getAudioTracks","length"],"mappings":"gJAAA;AAEA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,C,wFACA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAA0C,IAAvCC,CAAAA,QAAuC,MAAvCA,QAAuC,CAA7BC,MAA6B,MAA7BA,MAA6B,CAArBC,MAAqB,MAArBA,MAAqB,CAAbC,MAAa,MAAbA,MAAa,CACpD,GAAMC,CAAAA,aAAa,CAAGR,MAAM,EAA5B,CACA,GAAMS,CAAAA,cAAc,CAAGT,MAAM,EAA7B,CACA,GAAMU,CAAAA,cAAc,CAAG,GAAIC,CAAAA,iBAAJ,EAAvB,CACA,cAAwCV,QAAQ,CAAC,IAAD,CAAhD,wCAAOW,YAAP,eAAqBC,eAArB,eAEAd,SAAS,CAAC,UAAM,CACZ,GAAIM,MAAJ,CAAY,CACR,GAAMS,CAAAA,UAAU,CAAGT,MAAM,CAACU,cAAP,GAAwB,CAAxB,CAAnB,CACA,GAAID,UAAJ,CAAgB,CACZA,UAAU,CAACE,OAAX,CAAqBJ,YAArB,CACAJ,aAAa,CAACS,OAAd,CAAsBC,SAAtB,CAAkCb,MAAlC,CACAK,cAAc,CAACS,SAAf,CAAyBd,MAAzB,EACH,CACJ,CAED;AAEH,CAZQ,CAYN,CAACA,MAAD,CAASO,YAAT,CAZM,CAAT,CAcA,GAAMQ,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBP,eAAe,CAAC,SAACQ,IAAD,QAAU,CAACA,IAAX,EAAD,CAAf,CACH,CAFD,CAIA,mBACI,uBACKhB,MAAM,cACH,aAAK,SAAS,CAAC,gBAAf,wBACI,cAAO,GAAG,CAAEG,aAAZ,CAA2B,QAAQ,KAAnC,CAAoC,WAAW,KAA/C,CAAgD,KAAK,CAAE,CAACH,MAAM,CAACiB,cAAP,GAAwBC,MAAhF,EADJ,cAEI,eAAQ,OAAO,CAAEH,WAAjB,UACKR,YAAY,CAAG,eAAH,CAAqB,cADtC,EAFJ,GADG,cAQH,KAAC,MAAD,EAAQ,IAAI,CAAER,QAAd,CAAwB,IAAI,CAAE,GAA9B,CAAmC,KAAK,CAAC,MAAzC,EATR,CAWKC,MAAM,eACH,cAAO,GAAG,CAAEI,cAAZ,CAA4B,QAAQ,KAApC,CAAqC,WAAW,KAAhD,EAZR,GADJ,CAiBH,CAzCD,CA2CA,cAAeN,CAAAA,KAAf","sourcesContent":["// Video.js\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport Avatar from 'react-avatar';\r\nconst Video = ({ username, stream, socket, roomId }) => {\r\n    const localVideoRef = useRef();\r\n    const remoteVideoRef = useRef();\r\n    const peerConnection = new RTCPeerConnection();\r\n    const [videoEnabled, setVideoEnabled] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (stream) {\r\n            const videoTrack = stream.getVideoTracks()[0];\r\n            if (videoTrack) {\r\n                videoTrack.enabled = videoEnabled;\r\n                localVideoRef.current.srcObject = stream;\r\n                peerConnection.addStream(stream);\r\n            }\r\n        }\r\n\r\n        // ... (rest of the useEffect)\r\n\r\n    }, [stream, videoEnabled]);\r\n\r\n    const toggleVideo = () => {\r\n        setVideoEnabled((prev) => !prev);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {stream ? (\r\n                <div className=\"videoContainer\">\r\n                    <video ref={localVideoRef} autoPlay playsInline muted={!stream.getAudioTracks().length} />\r\n                    <button onClick={toggleVideo}>\r\n                        {videoEnabled ? 'Disable Video' : 'Enable Video'}\r\n                    </button>\r\n                </div>\r\n            ) : (\r\n                <Avatar name={username} size={100} round=\"12px\" />\r\n            )}\r\n            {stream && (\r\n                <video ref={remoteVideoRef} autoPlay playsInline />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Video;\r\n"]},"metadata":{},"sourceType":"module"}