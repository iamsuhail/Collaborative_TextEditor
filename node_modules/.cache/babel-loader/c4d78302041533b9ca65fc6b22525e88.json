{"ast":null,"code":"import _defineProperty from\"C:/Users/Muhammad suhail/Desktop/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/Muhammad suhail/Desktop/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/Muhammad suhail/Desktop/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useRef,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Video=function Video(_ref){var key=_ref.key,socket=_ref.socket,roomId=_ref.roomId,username=_ref.username,isLocalUser=_ref.isLocalUser;var localVideoRef=useRef();var remoteVideoRef=useRef();var remoteVideoRefs=useRef({});var _useState=useState(true),_useState2=_slicedToArray(_useState,2),videoEnabled=_useState2[0],setVideoEnabled=_useState2[1];var peerConnection=new RTCPeerConnection();var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),peerConnections=_useState4[0],setPeerConnections=_useState4[1];useEffect(function(){// Get user media and display it locally\nnavigator.mediaDevices.getUserMedia({video:true,audio:true}).then(function(stream){localVideoRef.current.srcObject=stream;peerConnection.addStream(stream);}).catch(function(error){return console.error('Error accessing media devices:',error);});// Listen for remote stream and display it\npeerConnection.onaddstream=function(event){remoteVideoRef.current.srcObject=event.stream;};// Listen for ICE candidates and send them to the signaling server\npeerConnection.onicecandidate=function(event){if(event.candidate){socket.emit('ice-candidate',{roomId:roomId,candidate:event.candidate});}};// Listen for signaling events (offer, answer)\nsocket.on('offer',function(data){var newPeerConnection=new RTCPeerConnection();// Create a new RTCPeerConnection for each remote peer\nvar socketId=data.socketId;setPeerConnections(function(prevConnections){return _objectSpread(_objectSpread({},prevConnections),{},_defineProperty({},socketId,newPeerConnection));});newPeerConnection.onaddstream=function(event){// Use a unique ref for each remote user\nremoteVideoRefs.current[socketId].current.srcObject=event.stream;};newPeerConnection.onicecandidate=function(event){if(event.candidate){socket.emit('ice-candidate',{roomId:roomId,socketId:socketId,candidate:event.candidate});}};newPeerConnection.setRemoteDescription(new RTCSessionDescription(data.offer));newPeerConnection.createAnswer().then(function(answer){newPeerConnection.setLocalDescription(answer);socket.emit('answer',{roomId:roomId,answer:answer});}).catch(function(error){return console.error('Error creating answer:',error);});});socket.on('answer',function(data){var peerConnectionToUpdate=peerConnections[data.socketId];if(peerConnectionToUpdate){peerConnectionToUpdate.setRemoteDescription(new RTCSessionDescription(data.answer));}});// Create offer and emit it to the signaling server\npeerConnection.createOffer().then(function(offer){peerConnection.setLocalDescription(offer);socket.emit('offer',{roomId:roomId,offer:offer});}).catch(function(error){return console.error('Error creating offer:',error);});},[socket,roomId]);var toggleVideo=function toggleVideo(){console.log('Toggle Video');setVideoEnabled(function(prev){console.log('Previous Video State:',prev);var videoTrack=localVideoRef.current.srcObject.getVideoTracks()[0];if(videoTrack){videoTrack.enabled=!prev;}// Emit the updated video state to others\nsocket.emit('toggle-video',{roomId:roomId,key:key,videoEnabled:!prev});console.log('Toggle Video Event Emitted');return!prev;});};useEffect(function(){var handleToggleVideo=function handleToggleVideo(_ref2){var socketId=_ref2.socketId,remoteVideoEnabled=_ref2.videoEnabled;console.log('Handle Toggle Video for',socketId);console.log('Remote Video State:',remoteVideoEnabled);// Add this log\nsetVideoEnabled(remoteVideoEnabled);// Update the local state\nvar remotePeerConnection=peerConnections[socketId];if(remotePeerConnection){var _remotePeerConnection;var remoteVideoTrack=(_remotePeerConnection=remotePeerConnection.getRemoteStreams()[0])===null||_remotePeerConnection===void 0?void 0:_remotePeerConnection.getVideoTracks()[0];if(remoteVideoTrack){console.log(\"Remote video state (\".concat(socketId,\"):\"),remoteVideoEnabled);console.log('Remote video track enabled:',remoteVideoTrack.enabled);try{remoteVideoTrack.enabled=remoteVideoEnabled;console.log('Remote video state updated successfully.');}catch(error){console.error('Error updating remote video state:',error);}}}};socket.on('toggle-video',handleToggleVideo);return function(){// Cleanup event listeners\nsocket.off('toggle-video',handleToggleVideo);};},[socket,peerConnections]);return/*#__PURE__*/_jsxs(\"div\",{className:\"videoContainer\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"userName\",children:username}),/*#__PURE__*/_jsxs(\"div\",{className:\"videoFeature\",children:[/*#__PURE__*/_jsx(\"video\",{className:\"videoFeature\",ref:localVideoRef,autoPlay:true,playsInline:true,muted:!videoEnabled}),isLocalUser&&/*#__PURE__*/_jsx(\"button\",{onClick:toggleVideo,children:videoEnabled?'Disable Video':'Enable Video'})]}),remoteVideoRef.current&&/*#__PURE__*/_jsx(\"video\",{className:\"videoFeature\",ref:remoteVideoRef,autoPlay:true,playsInline:true})]});};export default Video;","map":{"version":3,"sources":["C:/Users/Muhammad suhail/Desktop/realtime-code-editor-main/src/components/Video.js"],"names":["React","useEffect","useRef","useState","Video","key","socket","roomId","username","isLocalUser","localVideoRef","remoteVideoRef","remoteVideoRefs","videoEnabled","setVideoEnabled","peerConnection","RTCPeerConnection","peerConnections","setPeerConnections","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","addStream","catch","error","console","onaddstream","event","onicecandidate","candidate","emit","on","data","newPeerConnection","socketId","prevConnections","setRemoteDescription","RTCSessionDescription","offer","createAnswer","answer","setLocalDescription","peerConnectionToUpdate","createOffer","toggleVideo","log","prev","videoTrack","getVideoTracks","enabled","handleToggleVideo","remoteVideoEnabled","remotePeerConnection","remoteVideoTrack","getRemoteStreams","off"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst Video = ({ key,socket, roomId, username, isLocalUser }) => {\r\n    const localVideoRef = useRef();\r\n    const remoteVideoRef = useRef();\r\n    const remoteVideoRefs = useRef({});\r\n    const [videoEnabled, setVideoEnabled] = useState(true);\r\n\r\n    const peerConnection = new RTCPeerConnection();\r\n    const [peerConnections, setPeerConnections] = useState({});\r\n\r\n    useEffect(() => {\r\n        // Get user media and display it locally\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n            .then((stream) => {\r\n                localVideoRef.current.srcObject = stream;\r\n                peerConnection.addStream(stream);\r\n            })\r\n            .catch((error) => console.error('Error accessing media devices:', error));\r\n\r\n        // Listen for remote stream and display it\r\n        peerConnection.onaddstream = (event) => {\r\n            remoteVideoRef.current.srcObject = event.stream;\r\n        };\r\n\r\n        // Listen for ICE candidates and send them to the signaling server\r\n        peerConnection.onicecandidate = (event) => {\r\n            if (event.candidate) {\r\n                socket.emit('ice-candidate', { roomId, candidate: event.candidate });\r\n            }\r\n        };\r\n\r\n        // Listen for signaling events (offer, answer)\r\n        socket.on('offer', (data) => {\r\n            const newPeerConnection = new RTCPeerConnection(); // Create a new RTCPeerConnection for each remote peer\r\n            const socketId = data.socketId;\r\n\r\n            setPeerConnections((prevConnections) => ({\r\n                ...prevConnections,\r\n                [socketId]: newPeerConnection,\r\n            }));\r\n\r\n            newPeerConnection.onaddstream = (event) => {\r\n                // Use a unique ref for each remote user\r\n                remoteVideoRefs.current[socketId].current.srcObject = event.stream;\r\n            };\r\n\r\n            newPeerConnection.onicecandidate = (event) => {\r\n                if (event.candidate) {\r\n                    socket.emit('ice-candidate', { roomId, socketId, candidate: event.candidate });\r\n                }\r\n            };\r\n\r\n            newPeerConnection.setRemoteDescription(new RTCSessionDescription(data.offer));\r\n            newPeerConnection.createAnswer()\r\n                .then((answer) => {\r\n                    newPeerConnection.setLocalDescription(answer);\r\n                    socket.emit('answer', { roomId, answer });\r\n                })\r\n                .catch((error) => console.error('Error creating answer:', error));\r\n        });\r\n\r\n        socket.on('answer', (data) => {\r\n            const peerConnectionToUpdate = peerConnections[data.socketId];\r\n            if (peerConnectionToUpdate) {\r\n                peerConnectionToUpdate.setRemoteDescription(new RTCSessionDescription(data.answer));\r\n            }\r\n        });\r\n\r\n        // Create offer and emit it to the signaling server\r\n        peerConnection.createOffer()\r\n            .then((offer) => {\r\n                peerConnection.setLocalDescription(offer);\r\n                socket.emit('offer', { roomId, offer });\r\n            })\r\n            .catch((error) => console.error('Error creating offer:', error));\r\n\r\n    }, [socket, roomId]);\r\n\r\n    const toggleVideo = () => {\r\n        console.log('Toggle Video');\r\n        setVideoEnabled((prev) => {\r\n            console.log('Previous Video State:', prev);\r\n            const videoTrack = localVideoRef.current.srcObject.getVideoTracks()[0];\r\n            if (videoTrack) {\r\n                videoTrack.enabled = !prev;\r\n            }\r\n            // Emit the updated video state to others\r\n            socket.emit('toggle-video', { roomId,key, videoEnabled: !prev });\r\n            console.log('Toggle Video Event Emitted');\r\n            return !prev;\r\n        });\r\n    };\r\n    \r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        const handleToggleVideo = ({ socketId, videoEnabled: remoteVideoEnabled }) => {\r\n            console.log('Handle Toggle Video for', socketId);\r\n            console.log('Remote Video State:', remoteVideoEnabled);  // Add this log\r\n            setVideoEnabled(remoteVideoEnabled); // Update the local state\r\n        \r\n            const remotePeerConnection = peerConnections[socketId];\r\n            if (remotePeerConnection) {\r\n                const remoteVideoTrack = remotePeerConnection.getRemoteStreams()[0]?.getVideoTracks()[0];\r\n                if (remoteVideoTrack) {\r\n                    console.log(`Remote video state (${socketId}):`, remoteVideoEnabled);\r\n                    console.log('Remote video track enabled:', remoteVideoTrack.enabled);\r\n                    try {\r\n                        remoteVideoTrack.enabled = remoteVideoEnabled;\r\n                        console.log('Remote video state updated successfully.');\r\n                    } catch (error) {\r\n                        console.error('Error updating remote video state:', error);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        \r\n    \r\n        socket.on('toggle-video', handleToggleVideo);\r\n    \r\n        return () => {\r\n            // Cleanup event listeners\r\n            socket.off('toggle-video', handleToggleVideo);\r\n        };\r\n    }, [socket, peerConnections]);\r\n    \r\n\r\n    return (\r\n        <div className='videoContainer'>\r\n            <span className=\"userName\">{username}</span>\r\n            <div className='videoFeature'>\r\n                <video className='videoFeature' ref={localVideoRef} autoPlay playsInline muted={!videoEnabled} />\r\n                {isLocalUser && (\r\n                    <button onClick={toggleVideo}>\r\n                        {videoEnabled ? 'Disable Video' : 'Enable Video'}\r\n                    </button>\r\n                )}\r\n            </div>\r\n            {remoteVideoRef.current && <video className='videoFeature' ref={remoteVideoRef} autoPlay playsInline />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Video;"]},"metadata":{},"sourceType":"module"}